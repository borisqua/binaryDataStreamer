"use strict";

class Helpers {
  
  static stimulusOn(element, config) {
    if (config.carousel.appearance.stimulation.color) {
      element.addClass(`keybox-${config.carousel.appearance.colorScheme.selected}-color`);
    }
    if (config.carousel.appearance.stimulation.size) {
      element.addClass(`keybox-${config.carousel.appearance.colorScheme.selected}-size`);
    }
    if (config.carousel.appearance.stimulation.shine) {
      element.addClass(`keybox-${config.carousel.appearance.colorScheme.selected}-shine`);
    }
    if (config.carousel.appearance.stimulation.animation.selected === "shake") {
      element.addClass(`keybox-${config.carousel.appearance.colorScheme.selected}-shake`);
    }
    if (config.carousel.appearance.stimulation.animation.selected === "turn") {
      element.addClass(`keybox-${config.carousel.appearance.colorScheme.selected}-turn`);
    }
    if (config.carousel.appearance.stimulation.animation.selected === "capsize") {
      element.addClass(`keybox-${config.carousel.appearance.colorScheme.selected}-capsize`);
    }
  }
  
  static stimulusOff(element, config) {
    element.removeClass(`keybox-${config.carousel.appearance.colorScheme.selected}-color`);
    element.removeClass(`keybox-${config.carousel.appearance.colorScheme.selected}-size`);
    element.removeClass(`keybox-${config.carousel.appearance.colorScheme.selected}-shine`);
    element.removeClass(`keybox-${config.carousel.appearance.colorScheme.selected}-shake`);
    element.removeClass(`keybox-${config.carousel.appearance.colorScheme.selected}-turn`);
    element.removeClass(`keybox-${config.carousel.appearance.colorScheme.selected}-capsize`);
  }
  
  static reloadSchema(config) {
    let
      html = $('html')
      , keybox = $('.key')
    ;
    
    if (config.carousel.keyboard.keybox.showBorder)
      keybox.addClass("keybox-bordered");
    else
      keybox.removeClass("keybox-bordered");
    
    switch (config.carousel.appearance.colorScheme.selected) {
      case `dark`:
        html.removeClass("light");
        keybox.removeClass("keybox-light");
        html.addClass("dark");
        keybox.addClass("keybox-dark");
        break;
      case `light`:
        html.removeClass("dark");
        keybox.removeClass("keybox-dark");
        html.addClass("light");
        keybox.addClass("keybox-light");
        break;
    }
    
  }
}

module.exports = Helpers;
